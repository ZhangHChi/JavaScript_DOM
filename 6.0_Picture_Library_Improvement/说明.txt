1.与DOM脚本编程工作有关的问题不外乎平稳退化，向后兼容和分离JavaScript这几大类。
2.作为一个原则，如果想用JavaScript给某个网页添加一些行为，就不应该让JavaScript代码对这个网页的结构有任何依赖。
3.选择一些有意义的单词来命名可以让代码更容易阅读和理解。要注意“保留字”不能用作变量名。现有的JavaScript函数或方法的名字也不能用来命名变量。
4.遍历之后设置onclick事件，让它在被点击时完成操作，例如:
               links[i].onclick = function(){
			           showPic(this);
					   return false;
			   }
5.马上执行这个函数它会无法完成任务。我们设置的函数必须在网页加载完之后立即执行。而网页加载完毕之后会触发一个onload事件，这个事件与window对象相关联。所以可以把它绑定到onload事件上。window.onclick=prepareGallery;。但这个事件只能绑定一个函数，它执行的是最后绑定的那个函数。解决办法是我们可以先创建一个匿名函数来容纳多个函数，然后把这个匿名函数绑定到onload事件上。
6.最佳的解决办法是addLoadEvent函数，具体操作是:
               ①把现有的window.onload事件处理函数的值存入变量oldonload。
			   ②如过这个处理函数上还没有绑定任何函数，就像平常那样把新函数添加给它。
			   ③如果这个处理函数上已经绑定了一些函数，就把新函数追加到现有指令的末尾。
			   function addLoadEvent(func){
			   var oldonload = window.onload;
			   if(typeof window.onload != 'function'){
			   window.onload = func;
			   }
			   else{
			   window.onload = function(){
			   oldonload();
			   func();
			   }
			   }
			   }
7.不要做太多假设，要对用到的元素和属性进行检查。在目录的例子里对showPic.js里的showPic函数进行检查。如果把placeholder图片删掉因为prepareGallery函数默认阻止onclick的默认行为，所以网页不会产生任何反映，是否返回一个false值取消onclick事件的默认行为，其实应该由showPic函数决定。如果图片切换成功返回true，失败返回false，在把prepareGallery函数里面的点击事件取反。
8.不是所有用户都是用鼠标访问的，有些用户还会用键盘访问。有个叫onkeypress的事件处理函数就是专门用来处理键盘事件的。如果你想让onkeypress事件与onclick事件触发同样的行为，可以简单地把有关指令复制一份，还有一种更简单的办法可以确保onkeypress模仿onclick事件的行为:links[i].onkeypress = links[i].onclick;。最好还是不添加onkeypress事件处理函数。因为容易出问题，而且onclick事件处理函数已经能够满足需求了。虽然它叫onclick但是他对键盘访问的支持相当完美。
9.小结:
1.尽量让我们的JavaScript代码不再依赖于那些没有保障的假设，添加检测。
2.尽量不要过多使用onkeypress事件处理函数。
3.最重要的是把事件处理函数从标记文档分离到一个外部JavaScript文件。平稳退化。结构与行为分离的程度越大越好。